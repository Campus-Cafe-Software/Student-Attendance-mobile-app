{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.string.replace.js","webpack:///./src/pages/EditTimes.vue","webpack:///./src/pages/EditTimes.vue?eb62"],"names":["fixRegExpWellKnownSymbolLogic","anObject","toObject","toLength","toInteger","requireObjectCoercible","advanceStringIndex","regExpExec","max","Math","min","floor","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","maybeToString","it","undefined","String","REPLACE","nativeReplace","maybeCallNative","reason","REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE","REPLACE_KEEPS_$0","UNSAFE_SUBSTITUTE","searchValue","replaceValue","O","this","replacer","call","regexp","indexOf","res","done","value","rx","S","functionalReplace","global","fullUnicode","unicode","lastIndex","results","result","push","matchStr","accumulatedResult","nextSourcePosition","i","length","matched","position","index","captures","j","namedCaptures","groups","replacerArgs","concat","replacement","apply","getSubstitution","slice","str","tailPos","m","symbols","match","ch","capture","charAt","n","f","style","page-title","page-default-back-link","size","src","student","firstName","lastName","clockHistory","times","key","clockId","instructorClockInDateTime","display-format","picker-format","$event","target","modify","anythingChanged","instructorClockOutDateTime","removeSelectedTime","slot","icon","closeCircleOutline","addNewTime","expand","addCircleOutline","onSubmit","createOutline","errorCount","errorAbsent","props","studentID","type","required","classID","components","data","students","studentOrig","submitActionList","classes","cuInsClass","timeInOut","userName","semester","courseNumber","courseSection","labSection","studentId","checkIsAbsent","actionCount","methods","updateTime","event","console","log","search","nameKey","myArray","getTodayDay","today","Date","yyyy","getFullYear","toString","mm","getMonth","dd","getDate","changeTimeTo12","time","hh","split","AMPM","getStudents","$store","getters","getStudentList","JSON","stringify","cleanUpData","cuStudentList","$route","params","sid","parse","cid","toCheckIsAbsent","newTime","toLocaleDateString","year","month","day","hour","minute","replace","editSelectedTime","totalDeleteCount","paddingstudentOrig","isNew","submitNewTime","submitUpdateTime","canDel","submitDelTime","submitAddAbsent","myToken","getToken","requestOptions","method","headers","fetch","then","response","ok","openToastFailed","Promise","reject","status","openToastSuccessful","catch","error","errorMessage","submitDelAbsent","hasClock","flag","studentClockInDateTime","studentClockOutDateTime","isAbsent","markAbsent","e","detail","checked","create","message","duration","color","toast","present","onDidDismiss","$router","go","mounted","render"],"mappings":"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","file":"js/chunk-3e61b606.025e6804.js","sourcesContent":["'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative, reason) {\n  var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = reason.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE;\n  var REPLACE_KEEPS_$0 = reason.REPLACE_KEEPS_$0;\n  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';\n\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = requireObjectCoercible(this);\n      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return replacer !== undefined\n        ? replacer.call(searchValue, O, replaceValue)\n        : nativeReplace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      if (\n        (!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE && REPLACE_KEEPS_$0) ||\n        (typeof replaceValue === 'string' && replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1)\n      ) {\n        var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);\n        if (res.done) return res.value;\n      }\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n\n        results.push(result);\n        if (!global) break;\n\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n  // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return nativeReplace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n","<template>\r\n    <base-layout \r\n        page-title=\"Edit Times\"\r\n        page-default-back-link=\"studentList\"\r\n    >\r\n        <ion-grid>\r\n      <ion-row>\r\n        <ion-col size=\"12\" style=\"text-align: center\">\r\n          <!--<h4>Faculty Acceptance</h4>-->\r\n          <div><ion-img src=\"../../assets/default-avatar.png\" style=\"width:100px;margin: auto;margin-bottom:10px;\"></ion-img></div>\r\n          <h2 style=\"margin:0px;font-weight:bold;\">{{student.firstName}} {{student.lastName}}</h2>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n    <!--------->\r\n    <ion-grid>\r\n        <ion-row>\r\n            <ion-col size='5' style=\"text-align:center;\">IN</ion-col>\r\n            <ion-col size='4' style=\"text-align:center;\">OUT</ion-col>\r\n            <ion-col size='3' style=\"margin-left:25px;text-align:center;\"></ion-col>\r\n        </ion-row>\r\n    </ion-grid>\r\n    <hr style=\"border-width: 1px; margin: 0 20px;\"/>\r\n    <!--------->\r\n\r\n    <ion-grid>\r\n        <div v-for=\"(times, index) in student.clockHistory\" :key=\"times.clockId\">\r\n            <!--\r\n            <ion-row v-if=\"times.studentClockInDateTime != null && times.studentClockInDateTime != undefined && times.studentClockInDateTime != ''\">\r\n                \r\n                <ion-col size=\"4\"><span style=\"color:gray;padding-left: 15px;text-align:center;\">{{changeTimeTo12(times.studentClockInDateTime)}}</span></ion-col>\r\n                <ion-col size=\"4\"><span style=\"color:gray;padding-left: 15px;text-align:center;\">{{changeTimeTo12(times.studentClockOutDateTime)}}</span></ion-col>\r\n                <ion-col size=\"4\" style=\"text-align: center;\"><ion-button  @click=\"editSelectedTime(index)\" style=\"height:24px;--background:#517FC8;\">\r\n                    <ion-icon  slot=\"icon-only\" :icon=\"createOutline\"></ion-icon></ion-button></ion-col>\r\n            </ion-row>\r\n            -->\r\n            <ion-row v-if=\"times.instructorClockInDateTime != null && times.instructorClockInDateTime != undefined && times.instructorClockInDateTime != ''\">\r\n                <!--<ion-col size=\"4\"><span>{{changeTimeTo12(times.instructorClockInDateTime)}}</span></ion-col>\r\n                <ion-col size=\"4\"><span>{{changeTimeTo12(times.instructorClockOutDateTime)}}</span></ion-col>-->\r\n                <ion-col size=\"5\" style=\"text-align: center;\">\r\n                    <ion-datetime display-format=\"h:mm A\" picker-format=\"h:mm A\" \r\n                    v-model=\"times.instructorClockInDateTime\"\r\n                    v-bind:value=\"times.instructorClockInDateTime\"\r\n                    @IonChange=\"times.instructorClockInDateTime=$event.target.value;times.modify=2;anythingChanged=true;\"\r\n                    ></ion-datetime></ion-col>\r\n                <ion-col size=\"4\" style=\"text-align: center;\"><ion-datetime display-format=\"h:mm A\" picker-format=\"h:mm A\" \r\n                    v-model=\"times.instructorClockOutDateTime\"\r\n                    v-bind:value=\"times.instructorClockOutDateTime\"\r\n                    @IonChange=\"times.instructorClockOutDateTime=$event.target.value;times.modify=2;anythingChanged=true;\"\r\n                    ></ion-datetime></ion-col>\r\n                <ion-col size=\"3\" style=\"text-align: center;\">\r\n                    <!--<ion-button v-if=\"times.canDel == true\"  @click=\"removeSelectedTime(index)\" style=\"height:26px;--background:#517FC8;\">-->\r\n                    <ion-button  @click=\"removeSelectedTime(index)\" style=\"height:26px;--background:#517FC8;\">    \r\n                    <ion-icon  slot=\"icon-only\" :icon=\"closeCircleOutline\"></ion-icon></ion-button></ion-col>\r\n            </ion-row>\r\n            <!--<hr style=\"border-width: 1px; margin: 0 20px;\"/>-->\r\n        </div>\r\n    </ion-grid>\r\n    <!--\r\n    <ion-grid>\r\n        <ion-row>\r\n            <ion-col size=\"8\">\r\n                <ion-col size=\"5\" v-for=\"(studentClockInDateTime) in student.clockHistory\" :key=\"time.studentID\">\r\n                    <span style=\"display: inline-block;min-width:100px; height:40px;\">{{time}} </span>\r\n                </ion-col>\r\n            </ion-col>\r\n            <ion-col size=\"3\">\r\n            <ion-col size=\"12\" v-for=\"(studentClockOutDateTime, index) in student.clockHistory\" :key=\"time.studentID\" >\r\n                <ion-button  @click=\"removeSelectedTime(index)\" style=\"height:24px;--background:#54595f;\" v-if=\"index%2 === 0 \">\r\n                 <ion-icon  slot=\"icon-only\" :icon=\"closeCircleOutline\"></ion-icon></ion-button>\r\n            </ion-col>\r\n            </ion-col>\r\n        </ion-row>\r\n    </ion-grid> \r\n    -->\r\n\r\n    <!--------->\r\n    <!--<ion-list>\r\n        <ion-item> \r\n                <ion-col size=\"10\">\r\n                    <ion-row style=\"align-content: flex-start;\" v-if=\"student.isPresent\">\r\n                        <ion-col size=\"12\" v-for=\"(time, index) in student.timeInOut\" :key=\"time.studentID\">\r\n                            <div><span v-if=\"index%2 === 0 \" style=\"display: inline-block;min-width:40px;\">IN</span>\r\n                                <span v-if=\"index%2 != 0 \" style=\"display: inline-block;min-width:40px;\">OUT</span>\r\n                                <span style=\"display: inline-block;min-width:100px;\">{{time}} </span>\r\n                                \r\n                            </div>\r\n                        \r\n                        </ion-col>\r\n                        <ion-button  @click=\"removeSelectedTime(index)\" style=\"height:24px;\">\r\n                                    <ion-icon  slot=\"icon-only\" :icon=\"closeCircleOutline\"></ion-icon>\r\n                                    </ion-button>\r\n                        <ion-col size=\"12\">\r\n                        <ion-button  @click=\"addNewTime(student)\" style=\"width:120px;\"><ion-icon  slot=\"start\" :icon=\"addCircleOutline\"></ion-icon>Add</ion-button>\r\n                        </ion-col>\r\n                        <ion-datetime display-format=\"h:mm A\" minute-values=\"0,10,20,30,40,50\" :value=\"time\" id=\"tt\"></ion-datetime>\r\n                    </ion-row>\r\n                </ion-col>\r\n\r\n        </ion-item> \r\n    </ion-list>-->\r\n    <!--------->\r\n    <ion-grid>\r\n        <ion-row>\r\n            <ion-col size=\"12\">\r\n                <ion-button  @click=\"addNewTime(student)\" style=\"--background:#517FC8;padding:0 90px;\" expand=\"block\">\r\n                    <ion-icon  slot=\"start\" :icon=\"addCircleOutline\"></ion-icon>Add Time</ion-button>\r\n            </ion-col>\r\n        </ion-row>\r\n    </ion-grid>\r\n    \r\n    <!--\r\n    <ion-grid>\r\n        <ion-row>\r\n            \r\n            <ion-col size=\"6\">\r\n                <ion-button  @click=\"submitDelAbsent()\" style=\"--background:#54595f;\" expand=\"full\">\r\n                    <ion-icon  slot=\"start\" :icon=\"addCircleOutline\"></ion-icon>Not Absent</ion-button>\r\n            </ion-col>\r\n            <ion-col size=\"6\">\r\n                <ion-button  @click=\"submitAddAbsent()\" style=\"--background:#54595f;\" expand=\"full\">\r\n                    <ion-icon  slot=\"start\" :icon=\"addCircleOutline\"></ion-icon>Mark Absent</ion-button>\r\n            </ion-col>\r\n            \r\n            <ion-item>\r\n                <ion-label>Mark Absent</ion-label>\r\n                <ion-toggle slot=\"start\"></ion-toggle>\r\n            </ion-item>\r\n            <ion-item>\r\n            <ion-label>Mark Absent</ion-label>\r\n            <ion-checkbox\r\n                slot=\"start\" color=\"danger\" v-model=\"checkIsAbsent\"\r\n                @ionChange=\"markAbsent($event)\">             \r\n            </ion-checkbox></ion-item>\r\n        </ion-row>\r\n    </ion-grid> \r\n    -->\r\n    \r\n    <!--------->\r\n    <ion-grid v-if=\"anythingChanged==true\">\r\n    <ion-row>\r\n      <ion-col size=\"12\">\r\n          <ion-button expand=\"block\" @click=\"onSubmit\" style=\"--background:#ff796a;\">\r\n      <ion-icon slot=\"start\" :icon=\"createOutline\"></ion-icon>\r\n      Update\r\n    </ion-button>\r\n      </ion-col></ion-row>\r\n</ion-grid> \r\n    <ion-row>\r\n        <h2 style=\"color:red;padding:0 30px;text-align:center;\" v-if=\"errorCount>0\">{{errorCount}} server error(s) found on submit.</h2>\r\n    </ion-row>\r\n    <ion-row>\r\n        <h2 style=\"color:red;padding:0 30px;text-align:center;\" v-if=\"errorAbsent==true\">Error found on Mark Absent.</h2>\r\n    </ion-row>\r\n    </base-layout>\r\n</template>\r\n<script>\r\nimport {  toastController } from '@ionic/vue';\r\nimport { createOutline, closeCircleOutline, addCircleOutline  } from \"ionicons/icons\";\r\n\r\nexport default {\r\n    props:{\r\n        studentID:{\r\n            type:String,\r\n            required:true,\r\n        },\r\n        classID:{\r\n            type:String,\r\n            required:true,\r\n        },\r\n    },\r\n    components:{\r\n        //IonList, IonItem, \r\n        //IonCheckbox\r\n    },\r\n    data() {\r\n        return {\r\n            students:[],\r\n            student:{},     // updated  clockHistory, compare this two, build submit actions\r\n            studentOrig: {}, // original clockHistory\r\n            submitActionList: [], // array of object for submit action\r\n            classes:[],\r\n            cuInsClass:{},\r\n            timeInOut:[],\r\n            userName: '',\r\n            createOutline,\r\n            closeCircleOutline,\r\n            addCircleOutline,\r\n            semester: '',\r\n            courseNumber: '',\r\n            courseSection: '',\r\n            labSection: '',\r\n            studentId: '',\r\n            errorCount: 0,\r\n            errorAbsent: false,\r\n            checkIsAbsent: false,\r\n            anythingChanged: false,\r\n            actionCount: 0,\r\n        }\r\n    },\r\n    methods:{\r\n        updateTime(event){\r\n            console.log(event);\r\n        },\r\n        search(nameKey, myArray){\r\n            for (var i=0; i < myArray.length; i++) {\r\n                if (myArray[i].studentID === nameKey) {\r\n                    return myArray[i];\r\n                }\r\n            }\r\n        },\r\n\r\n        getTodayDay(){\r\n            var today = new Date();\r\n            var yyyy = today.getFullYear().toString();\r\n            var mm = today.getMonth()+1;\r\n            if(mm<10) { mm = \"0\" + mm.toString();}\r\n            var dd = today.getDate();\r\n            if(dd<10) { dd = \"0\" + dd.toString();}\r\n            today.getDate();\r\n            return yyyy+mm+dd;\r\n        },\r\n          // change to 12hr AMPM\r\n        changeTimeTo12(time) {\r\n            if( time == null || time == undefined || time == \"\") {return \"\";}\r\n            else {\r\n                var hh = time.split('T')[1].split(\":\")[0];\r\n                var mm = time.split('T')[1].split(\":\")[1];\r\n                var AMPM = \" AM\";\r\n                if (hh[0]==\"0\") {AMPM = \" AM\"; hh=hh[1];}\r\n                else if (hh <= 11) {AMPM = \" AM\";}\r\n                else if (hh == 12) {AMPM = \" PM\";}    \r\n                else if (hh > 12) {AMPM = \" PM\"; hh -=12;}\r\n\r\n                //console.log(hh+\":\"+mm+AMPM);\r\n                return hh+\":\"+mm+AMPM;\r\n            }\r\n        },\r\n\r\n        getStudents(){\r\n            \r\n            this.students = this.$store.getters.getStudentList;  \r\n            console.log(\"all students = \"+JSON.stringify(this.students));   \r\n            this.student = this.cleanUpData(this.$store.getters.cuStudentList(this.$route.params.sid));\r\n            //this.studentOrig = this.$store.getters.cuStudentList(this.$route.params.sid);\r\n            this.studentOrig = JSON.parse(JSON.stringify(this.student));\r\n            console.log(\"current student = \"+JSON.stringify(this.student));\r\n            this.cuInsClass = this.$store.getters.cuInsClass(this.$route.params.cid);\r\n\r\n            \r\n            this.toCheckIsAbsent();\r\n\r\n            /*this.classID  = this.$store.getters.cuClass(this.$route.params.id).classID;   \r\n            this.ClassTitle = this.$store.getters.cuClass(this.$route.params.id).ClassTitle;\r\n            this.classStartTime = this.$store.getters.cuClass(\r\n                this.$route.params.id\r\n            ).classStartTime;\r\n            this.classEndTime = this.$store.getters.cuClass(\r\n                this.$route.params.id\r\n            ).classEndTime;\r\n            */\r\n        },\r\n\r\n        // remove selected time, update list\r\n        removeSelectedTime(index){\r\n            // pick selected time\r\n            console.log(index);\r\n            \r\n            // remove instructor clock, set flag 3 for delete\r\n            this.student.clockHistory[index].instructorClockInDateTime = \"\";\r\n            this.student.clockHistory[index].instructorClockOutDateTime = \"\";\r\n            this.student.clockHistory[index].modify = 3;\r\n            \r\n            console.log(\"current student = \"+JSON.stringify(this.student));\r\n            this.anythingChanged = true;\r\n            /*\r\n            var clockHistory = {};\r\n            clockHistory = {\r\n                \"clockId\": this.student.clockHistory[index].clockId,\r\n                \"studentClockInDateTime\": this.student.clockHistory[index].studentClockInDateTime,\r\n                \"studentClockOutDateTime\": this.student.clockHistory[index].studentClockOutDateTime,\r\n                \"instructorClockInDateTime\": \"\",\r\n                \"instructorClockOutDateTime\": \"\",\r\n                \"isAbsent\":\"\"\r\n\r\n            };\r\n            this.student.clockHistory[index] = clockHistory;\r\n            */\r\n        },\r\n        // add time to end of list, update list\r\n        addNewTime(){\r\n            // new time add to array, \r\n            // bring up time picket\r\n            console.log(this.student);\r\n            console.log(\"current student = \"+JSON.stringify(this.student));\r\n            let newTime =  new Date().toLocaleDateString('fr-CA', { year: 'numeric', month: '2-digit', day: '2-digit', hour:'2-digit', minute:'2-digit' }).replace(', ','T').replace(' h ',':');\r\n            \r\n            // add instructor clock, set flag 1 for new\r\n            console.log(\"current student = \"+JSON.stringify(this.student));\r\n\r\n            var clockHistory = {};\r\n            clockHistory = {\r\n                \"clockId\":\"\",\r\n                \"studentClockInDateTime\": \"\",\r\n                \"studentClockOutDateTime\": \"\",\r\n                \"instructorClockInDateTime\":newTime,\r\n                \"instructorClockOutDateTime\":newTime,\r\n                \"isAbsent\":\"\",\r\n                \"modify\": 1,\r\n                \"canDel\": true,\r\n                \"isNew\": true\r\n            };\r\n            this.student.clockHistory.push(clockHistory);\r\n            console.log(\"current student with added time = \"+JSON.stringify(this.student));\r\n            this.anythingChanged = true;\r\n\r\n        },\r\n        editSelectedTime(index) {\r\n            console.log(\"current student = \"+JSON.stringify(this.student));\r\n            //var clockHistory = {};\r\n            let newTime =  new Date().toLocaleDateString('fr-CA', { year: 'numeric', month: '2-digit', day: '2-digit', hour:'2-digit', minute:'2-digit' }).replace(', ','T').replace(' h ',':');\r\n            \r\n            // update instructor entered time,\r\n            // if this is a new added time, keep modify key to 1\r\n            this.student.clockHistory[index].instructorClockInDateTime = newTime;\r\n            this.student.clockHistory[index].instructorClockOutDateTime = newTime;\r\n            if(this.student.clockHistory[index].modify != 1) this.student.clockHistory[index].modify =2 ;\r\n            \r\n            console.log(\"current student = \"+JSON.stringify(this.student));\r\n            this.anythingChanged = true;\r\n            \r\n            /*\r\n            clockHistory = {\r\n                \"clockId\": this.student.clockHistory[index].clockId,\r\n                \"studentClockInDateTime\": this.student.clockHistory[index].studentClockInDateTime,\r\n                \"studentClockOutDateTime\": this.student.clockHistory[index].studentClockOutDateTime,\r\n                \"instructorClockInDateTime\":newTime,\r\n                \"instructorClockOutDateTime\":newTime\r\n            };\r\n\r\n            this.student.clockHistory[index] = clockHistory;\r\n            */\r\n        },\r\n\r\n        onSubmit(){\r\n            // this.openToastSuccessful();\r\n            // compare student and studentOrig\r\n            // build list of items need to commit\r\n            // set absent or not\r\n            console.log(\"-new student = \"+JSON.stringify(this.student)); \r\n            console.log(\"-old student = \"+JSON.stringify(this.studentOrig)); \r\n            this.errorCount = 0;\r\n            var totalDeleteCount = 0;\r\n            this.paddingstudentOrig();\r\n\r\n            for(var i = 0; i < this.student.clockHistory.length; i++){\r\n                // if this is a new time, and time is modify or not, set modify to 1, call submitNewTime\r\n                if(this.student.clockHistory[i].isNew) { this.student.clockHistory[i].modify=1; }\r\n\r\n                switch(this.student.clockHistory[i].modify ){\r\n                    case 0: console.log(i+\" do nothing.\"); break;\r\n                    case 1: console.log(i+\" instructorClock is new\");\r\n                            this.actionCount++;\r\n                            this.submitNewTime(i);\r\n                            break;\r\n                    case 2: console.log(i+\" instructorClock is updated\");\r\n                            this.actionCount++;\r\n                            this.submitUpdateTime(i);\r\n                            break;\r\n                    case 3: console.log(i+\" instructorClock is deleted\");                            \r\n                            if(this.student.clockHistory[i].canDel == true)\r\n                                {\r\n                                    this.actionCount++;\r\n                                    this.submitDelTime(i);\r\n                                }\r\n                            totalDeleteCount++;\r\n                            break;\r\n                }  \r\n            }\r\n            \r\n            // if all the actions are delete, no time left in clockHistory\r\n            // mark student absent\r\n            if(this.student.clockHistory.length == totalDeleteCount) {\r\n                this.submitAddAbsent();\r\n                this.actionCount++;\r\n            }\r\n\r\n            /*\r\n            for(var i = 0; i < this.student.clockHistory.length; i++){\r\n                // instructorClock DateTime changed\r\n                if( (this.student.clockHistory[i].instructorClockInDateTime != this.studentOrig.clockHistory[i].instructorClockInDateTime) || \r\n                    (this.student.clockHistory[i].instructorClockOutDateTime != this.studentOrig.clockHistory[i].instructorClockOutDateTime)\r\n                ){  \r\n                    \r\n                    \r\n                    // different clock, no id, new instructorClock\r\n                    if(this.student.clockHistory[i].clockId == \"\") {\r\n                         // has clock data\r\n                         if (\r\n                            (this.student.clockHistory[i].instructorClockInDateTime.length > 4) || \r\n                            (this.student.clockHistory[i].instructorClockOutDateTime.length > 4)\r\n                        ) {\r\n                            console.log(i+\" instructorClock is new\");\r\n                            this.submitNewTime(i);\r\n                        }\r\n                    } \r\n                    // different clock, got id, edit instructorClock\r\n                    else {\r\n                        // different clock, got id, new time empty, old time not empty\r\n                        if( ( (this.student.clockHistory[i].instructorClockInDateTime.length < 4) || \r\n                              (this.student.clockHistory[i].instructorClockOutDateTime.length < 4)) &&\r\n                              (this.studentOrig.clockHistory[i].instructorClockInDateTime.length > 4 ||\r\n                               this.studentOrig.clockHistory[i].instructorClockOutDateTime.length > 4 )\r\n                        ){ \r\n                            console.log(i+\" instructorClock is deleted\");\r\n                            this.submitDelTime(i);\r\n                        }\r\n\r\n                        // different clock, got id, has time, update time.  \r\n                        else if (\r\n                            (this.student.clockHistory[i].instructorClockInDateTime.length > 4) || \r\n                            (this.student.clockHistory[i].instructorClockOutDateTime.length > 4)\r\n                        ) {                        \r\n                            console.log(i+\" instructorClock is updated\");\r\n                            this.submitUpdateTime(i)\r\n                        }\r\n                    }\r\n                } else {\r\n                    console.log(i+\" do nothing.\");\r\n                }\r\n            }\r\n            */\r\n            /*\r\n            for(var i = 0; i < this.student.clockHistory.length; i++){\r\n                if( this.student.clockHistory[i].instructorClockInDateTime != undefined && (\r\n                    this.student.clockHistory[i].instructorClockInDateTime.length > 4 ||\r\n                    this.student.clockHistory[i].instructorClockOutDateTime.length > 4 ) ) {\r\n                        console.log(i+\" instructorClock is not empty\");\r\n                        if(this.student.clockHistory[i].clockId != undefined && this.student.clockHistory[i].clockId == \"\"){\r\n                            console.log(i+\" instructorClock is new\");\r\n                            this.submitNewTime(i)\r\n                        } else {\r\n                            console.log(i+\" instructorClock is not empty 2\");\r\n                            if( this.student.clockHistory[i].instructorClockInDateTime != undefined && (\r\n                                this.student.clockHistory[i].instructorClockInDateTime != this.studentOrig.clockHistory[i].instructorClockInDateTime ||\r\n                                this.student.clockHistory[i].instructorClockOutDateTime != this.studentOrig.clockHistory[i].instructorClockOutDateTime )\r\n                            ){\r\n                                console.log(i+\" instructorClock is updated\");\r\n                                this.submitUpdateTime(i)\r\n                            }\r\n                        }\r\n                    }\r\n                else if ( this.student.clockHistory[i].instructorClockInDateTime != undefined && (\r\n                          this.student.clockHistory[i].instructorClockInDateTime.length < 4 &&\r\n                          this.student.clockHistory[i].instructorClockOutDateTime.length < 4 && \r\n                          this.student.clockHistory[i].clockId != \"\" ) ){\r\n                          console.log(i+\" instructorClock is deleted\");\r\n                          this.submitDelTime(i)\r\n\r\n                } else {\r\n                    console.log(i+\" do nothing.\");\r\n                }\r\n            }\r\n            \r\n\r\n            // set absent flag\r\n            if(this.hasClock()) {\r\n                this.submitDelAbsent();\r\n            } else {\r\n                this.submitAddAbsent();\r\n            }\r\n            */\r\n\r\n        },\r\n\r\n        // Add new instructor clock hours record for a student in instructor’s class.\r\n        submitNewTime(index){\r\n            // post /cafeweb/mobileApi/instructor/studentClockTime\r\n            var myToken = this.$store.getters.getToken;\r\n            console.log(\"token is \"+myToken);\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json', \r\n                           'Authorization': 'Bearer '+ this.$store.getters.getToken}\r\n            };\r\n            fetch('/cafeweb/mobileApi/instructor/studentClockTime?'+\r\n                \"semester=\" + this.cuInsClass.semester + \r\n                \"&courseNumber=\" + this.cuInsClass.courseNumber +\r\n                \"&courseSection=\" + this.cuInsClass.courseSection +\r\n                \"&labSection=\" + this.cuInsClass.labSection +\r\n                \"&date=\" + this.getTodayDay() +\r\n                \"&studentId=\" + this.student.studentId +\r\n                \"&clockIn=\" + this.student.clockHistory[index].instructorClockInDateTime +\r\n                \"&clockOut=\" +  this.student.clockHistory[index].instructorClockOutDateTime\r\n                , requestOptions)\r\n                .then(async response => {\r\n                //const data = await response.json();\r\n\r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message from body or default to response status\r\n                    //const error = (data && data.message) || response.status;\r\n                    this.errorCount++;\r\n                    this.openToastFailed();\r\n                    return Promise.reject(response.status);                    \r\n                }\r\n                //console.log(\"ins classes = \" + JSON.stringify(data.classes));\r\n                console.log(\"added new time \"+index);\r\n                this.openToastSuccessful();\r\n                })\r\n                .catch(error => {\r\n                    this.errorMessage = error;\r\n                    console.error('There was an error!', error);\r\n                    this.errorCount++;\r\n                    this.openToastFailed();\r\n                });\r\n        },\r\n\r\n        // Update instructor clock hours for an existing clock hour record\r\n        submitUpdateTime(index){\r\n            // put  /cafeweb/mobileApi/instructor/studentClockTime\r\n            var myToken = this.$store.getters.getToken;\r\n            console.log(\"token is \"+myToken);\r\n            const requestOptions = {\r\n                method: 'PUT',\r\n                headers: { 'Content-Type': 'application/json', \r\n                           'Authorization': 'Bearer '+ this.$store.getters.getToken}\r\n            };\r\n            fetch('/cafeweb/mobileApi/instructor/studentClockTime?'+\r\n                \"semester=\" + this.cuInsClass.semester + \r\n                \"&courseNumber=\" + this.cuInsClass.courseNumber +\r\n                \"&courseSection=\" + this.cuInsClass.courseSection +\r\n                \"&labSection=\" + this.cuInsClass.labSection +\r\n                \"&date=\" + this.getTodayDay() +\r\n                \"&studentId=\" + this.student.studentId +\r\n                \"&clockId=\" + this.student.clockHistory[index].clockId +\r\n                \"&clockIn=\" + this.student.clockHistory[index].instructorClockInDateTime +\r\n                \"&clockOut=\" +  this.student.clockHistory[index].instructorClockOutDateTime\r\n                , requestOptions)\r\n                .then(async response => {\r\n                //const data = await response.json();\r\n\r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message from body or default to response status\r\n                    //const error = (data && data.message) || response.status;\r\n                    this.errorCount++;\r\n                    this.openToastFailed();\r\n                    return Promise.reject(response.status);\r\n                }\r\n                //console.log(\"ins classes = \" + JSON.stringify(data.classes));\r\n                    console.log(\"updated old time\"+index);\r\n                    this.openToastSuccessful();\r\n                })\r\n                .catch(error => {\r\n                    this.errorMessage = error;\r\n                    console.error('There was an error!', error);\r\n                    this.errorCount++;\r\n                    this.openToastFailed();\r\n                });\r\n        },\r\n\r\n        // Delete clock hours records. Record can only be deleted if student clock hours do not exist.\r\n        // No student time\r\n        // has inst time only\r\n        submitDelTime(index){\r\n            //  DELETE  /cafeweb/mobileApi/instructor/studentClockTime\r\n            var myToken = this.$store.getters.getToken;\r\n            console.log(\"token is \"+myToken);\r\n            const requestOptions = {\r\n                method: 'DELETE',\r\n                headers: { 'Content-Type': 'application/json', \r\n                           'Authorization': 'Bearer '+ this.$store.getters.getToken}\r\n            };\r\n            fetch('/cafeweb/mobileApi/instructor/studentClockTime?'+\r\n                \"semester=\" + this.cuInsClass.semester + \r\n                \"&courseNumber=\" + this.cuInsClass.courseNumber +\r\n                \"&courseSection=\" + this.cuInsClass.courseSection +\r\n                \"&labSection=\" + this.cuInsClass.labSection +\r\n                \"&date=\" + this.getTodayDay() +\r\n                \"&studentId=\" + this.student.studentId +\r\n                \"&clockId=\" + this.student.clockHistory[index].clockId \r\n                , requestOptions)\r\n                .then(async response => {\r\n                //const data = await response.json();\r\n\r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message from body or default to response status\r\n                    //const error = (data && data.message) || response.status;\r\n                    this.errorCount++;\r\n                    this.openToastFailed();\r\n                    return Promise.reject(response.status);\r\n                }\r\n                //console.log(\"ins classes = \" + JSON.stringify(data.classes));\r\n                    console.log(\"updated old time\"+index);\r\n                    this.openToastSuccessful();\r\n                })\r\n                .catch(error => {\r\n                    this.errorMessage = error;\r\n                    console.error('There was an error!', error);\r\n                    this.errorCount++;\r\n                    this.openToastFailed();\r\n                });\r\n        },\r\n\r\n        // Absent flag is stored in clock hour record with no instructor or student clock in/out hours.\r\n        // add absent flag to \"Y\"\r\n        submitAddAbsent(){\r\n            // POST  /cafeweb/mobileApi/instructor/studentAbsent\r\n            var myToken = this.$store.getters.getToken;\r\n            console.log(\"token is \"+myToken);\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json', \r\n                           'Authorization': 'Bearer '+ this.$store.getters.getToken}\r\n            };\r\n            fetch('/cafeweb/mobileApi/instructor/studentAbsent?'+\r\n                \"semester=\" + this.cuInsClass.semester + \r\n                \"&courseNumber=\" + this.cuInsClass.courseNumber +\r\n                \"&courseSection=\" + this.cuInsClass.courseSection +\r\n                \"&labSection=\" + this.cuInsClass.labSection +\r\n                \"&date=\" + this.getTodayDay() +\r\n                \"&studentId=\" + this.student.studentId\r\n                , requestOptions)\r\n                .then(async response => {\r\n                //const data = await response.json();\r\n\r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message from body or default to response status\r\n                    //const error = (data && data.message) || response.status;\r\n                    this.errorCount++;\r\n                    this.errorAbsent = true;\r\n                    return Promise.reject(response.status);\r\n                }\r\n                //console.log(\"ins classes = \" + JSON.stringify(data.classes));\r\n                    console.log(\"mark absent Y\");\r\n                    this.errorAbsent = false;\r\n                    this.openToastSuccessful();\r\n                })\r\n                .catch(error => {\r\n                    this.errorMessage = error;\r\n                    console.error('There was an error!', error);\r\n                    this.errorCount++;\r\n                    this.errorAbsent = true;\r\n                });\r\n        },\r\n\r\n        // Absent flag is stored in clock hour record with no instructor or student clock in/out hours.\r\n        // remove absent flag to \"N\"\r\n        submitDelAbsent() {\r\n            // DELETE  /cafeweb/mobileApi/instructor/studentAbsent\r\n            var myToken = this.$store.getters.getToken;\r\n            console.log(\"token is \"+myToken);\r\n            const requestOptions = {\r\n                method: 'DELETE',\r\n                headers: { 'Content-Type': 'application/json', \r\n                           'Authorization': 'Bearer '+ this.$store.getters.getToken}\r\n            };\r\n            fetch('/cafeweb/mobileApi/instructor/studentAbsent?'+\r\n                \"semester=\" + this.cuInsClass.semester + \r\n                \"&courseNumber=\" + this.cuInsClass.courseNumber +\r\n                \"&courseSection=\" + this.cuInsClass.courseSection +\r\n                \"&labSection=\" + this.cuInsClass.labSection +\r\n                \"&date=\" + this.getTodayDay() +\r\n                \"&studentId=\" + this.student.studentId + \r\n                \"&clockId=\" + this.student.clockHistory[0].clockId\r\n                , requestOptions)\r\n                .then(async response => {\r\n                //const data = await response.json();\r\n\r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message from body or default to response status\r\n                    //const error = (data && data.message) || response.status;\r\n                    this.errorCount++;\r\n                    this.errorAbsent = true;\r\n                    return Promise.reject(response.status);\r\n                }\r\n                //console.log(\"ins classes = \" + JSON.stringify(data.classes));\r\n                    console.log(\"mark absent N\");\r\n                    this.errorAbsent = false;\r\n                })\r\n                .catch(error => {\r\n                    this.errorMessage = error;\r\n                    console.error('There was an error!', error);\r\n                    this.errorCount++;\r\n                    this.errorAbsent = true;\r\n                });\r\n        },\r\n\r\n        // check if the clockhistory is empty\r\n        hasClock(){\r\n            var flag = false;\r\n            if(this.student.clockHistory.length > 0 ) {\r\n                for(var i =0; i < this.student.clockHistory.length; i++){\r\n                    if( this.student.clockHistory[i].studentClockInDateTime.length > 4 ||\r\n                        this.student.clockHistory[i].studentClockOutDateTime.length > 4 ||\r\n                        this.student.clockHistory[i].instructorClockInDateTime.length > 4 ||\r\n                        this.student.clockHistory[i].instructorClockOutDateTime.length > 4                    \r\n                    ) { flag = true; }\r\n                }\r\n                return flag;\r\n            } else { return flag; }\r\n            \r\n            /*if(this.student.clockHistory.length > 1 ) {\r\n                // has student clock\r\n                if(\r\n                    this.student.clockHistory[0].clockId != undefined && \r\n                    this.student.clockHistory[0].clockId != \"\" && \r\n                    this.student.clockHistory[0].studentClockInDateTime.length > 4\r\n                ) {\r\n                    return true;\r\n                } \r\n                // has instructor clock no clock id\r\n                else if (\r\n                    this.student.clockHistory[0].clockId != undefined && \r\n                    this.student.clockHistory[0].clockId == \"\" && \r\n                    this.student.clockHistory[0].instructorClockInDateTime != undefined && \r\n                    this.student.clockHistory[0].instructorClockInDateTime.length > 4\r\n                ) {\r\n                    return true;\r\n                }               \r\n                else {return false;}\r\n            }\r\n             else {return false;}\r\n             */\r\n        },\r\n\r\n        // cleanup student data, fill place holder with \"\"\r\n        cleanUpData(student) {\r\n            if(student.clockHistory.length>0){\r\n                for(var i =0; i < student.clockHistory.length; i++){\r\n                    if(student.clockHistory[i].clockId == undefined) {\r\n                        student.clockHistory[i][\"clockId\"] = \"\";\r\n                    }                    \r\n                    if(student.clockHistory[i].studentClockInDateTime == undefined) {\r\n                        student.clockHistory[i][\"studentClockInDateTime\"] = \"\";\r\n                    }\r\n                    if(student.clockHistory[i].studentClockOutDateTime == undefined) {\r\n                        student.clockHistory[i][\"studentClockOutDateTime\"] = \"\";\r\n                    }\r\n\r\n                    // copy studentClock to instructorClock, \r\n                    // add canDel flag to false if both studentClock == \"\"\r\n                    /*\r\n                    if(student.clockHistory[i].canDel != undefined) {\r\n                        if(student.clockHistory[i][\"studentClockOutDateTime\"] !=\"\" || student.clockHistory[i][\"studentClockInDateTime\"] != \"\") {\r\n                            student.clockHistory[i][\"canDel\"] = false;\r\n                        } else if ( student.clockHistory[i][\"studentClockOutDateTime\"] ==\"\" && student.clockHistory[i][\"studentClockInDateTime\"] == \"\" ) {\r\n                            student.clockHistory[i][\"canDel\"] = true;\r\n                        }\r\n                    }\r\n                    */\r\n\r\n                    if(student.clockHistory[i].instructorClockInDateTime == undefined || student.clockHistory[i].instructorClockInDateTime == \"\") {\r\n                        student.clockHistory[i][\"instructorClockInDateTime\"] = student.clockHistory[i][\"studentClockInDateTime\"];\r\n                    }\r\n                    if(student.clockHistory[i].instructorClockOutDateTime == undefined || student.clockHistory[i].instructorClockOutDateTime == \"\") {\r\n                        student.clockHistory[i][\"instructorClockOutDateTime\"] = student.clockHistory[i][\"studentClockOutDateTime\"];\r\n                    }                    \r\n                    if(student.clockHistory[i].isAbsent == undefined) {\r\n                        student.clockHistory[i][\"isAbsent\"] = \"\";\r\n                    }\r\n                    \r\n                    \r\n                    \r\n\r\n\r\n                    student.clockHistory[i][\"modify\"] = 0;\r\n                    // 0 = unchanged\r\n                    // 1 = new \r\n                    // 2 = edit\r\n                    // 3 = del\r\n\r\n                }\r\n            }\r\n            console.log(\"after cleanup student = \"+JSON.stringify(student));\r\n            return student;\r\n        },\r\n\r\n        paddingstudentOrig(){\r\n            if(this.student.clockHistory.length > this.studentOrig.clockHistory.length) {\r\n                for(var i=0;i  < (this.student.clockHistory.length - this.studentOrig.clockHistory.length); i++ ){\r\n                    this.studentOrig.clockHistory.push({\r\n                        \"clockId\": \"\",\r\n                        \"studentClockInDateTime\": \"\",\r\n                        \"studentClockOutDateTime\": \"\",\r\n                        \"instructorClockInDateTime\": \"\",\r\n                        \"instructorClockOutDateTime\": \"\",\r\n                        \"isAbsent\": \"\",\r\n                        \"modify\": 0,\r\n                        \"isNew\": false\r\n                    })\r\n                }\r\n            }\r\n        },\r\n\r\n        markAbsent(e) {\r\n            console.log(e.detail.checked);\r\n            // set absent flag\r\n            if(e.detail.checked) {\r\n                this.submitAddAbsent();\r\n            } else {\r\n                this.submitDelAbsent();\r\n            }\r\n        },\r\n\r\n        toCheckIsAbsent() {\r\n            if(this.student.clockHistory.length>0){\r\n                for(var i =0; i < this.student.clockHistory.length; i++){                    \r\n                    if(this.student.clockHistory[i].isAbsent == \"Y\") {\r\n                        this.checkIsAbsent = true;\r\n                    }                \r\n                }                \r\n            } else if (this.student.clockHistory.length == 0) {\r\n                this.checkIsAbsent = true;\r\n            }        \r\n        },\r\n\r\n\r\n            async openToastSuccessful() {\r\n            this.actionCount--;\r\n                if(this.actionCount == 0){\r\n            const toast = await toastController\r\n                .create({\r\n                message: 'Submit Successful.',\r\n                position: 'top',\r\n                duration: 1000,\r\n                color: 'success'\r\n                })\r\n            toast.present();\r\n            \r\n                    toast.onDidDismiss().then(()=>{\r\n                        this.$router.go(-1);\r\n                    })\r\n                }\r\n            },\r\n            \r\n\r\n            async openToastFailed() {\r\n            const toast = await toastController\r\n                .create({\r\n                message: 'Failed submit, server error, please try again.',\r\n                position: 'top',\r\n                duration: 1000,\r\n                color: 'danger'\r\n                })\r\n            toast.present();\r\n            },\r\n    },\r\n    mounted: function () {\r\n      //update table display onload\r\n      this.getStudents();\r\n      console.log(\"classID = \"+this.$route.params.cid);\r\n      console.log(\"studentID = \"+this.$route.params.sid);\r\n  }\r\n    \r\n}\r\n</script>\r\n\r\n<!--\r\n<style>\r\nion-toggle {\r\n  --background: rgb(6, 255, 68);\r\n  --background-checked: red;\r\n\r\n  --handle-background: #ffffff;\r\n  --handle-background-checked: #ffffff;\r\n\r\n  width: 50px;\r\n}\r\n</style>\r\n\r\n-->","import { render } from \"./EditTimes.vue?vue&type=template&id=6eeaa580\"\nimport script from \"./EditTimes.vue?vue&type=script&lang=js\"\nexport * from \"./EditTimes.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}